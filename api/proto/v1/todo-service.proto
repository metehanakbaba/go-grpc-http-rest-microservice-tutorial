syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";

// ToDo Task
message ToDo {
    // Benzersiz integer ID
    int64 id = 1;
    // Task Basligi ToDo Task iccn
    string title = 2;
    // Detayli Aciklama ToDo Task icin
    string description = 3;
    // Olusturlacak ToDo Task icin hatirlatma (Tarih/Saat) timestamp formatında
    google.protobuf.Timestamp reminder = 4;
}

//  ToDo Task icin yeni olusturulacak sorgu
message CreateRequest{
    // API Versiyon
    string api = 1;

    // Olusturulacak Task 
    ToDo toDo = 2;
}

// Olusturulan sorgununun Todo Task yaniti
message CreateResponse{
     // API Versiyon
    string api = 1;

    // Olusturulacak task icin ID
    int64 id = 2;
}

message ReadRequest{
    // API Versiyon
    string api = 1;

    // Olusturulacak sorgu okuma icin ID
    int64 id = 2;
}

message ReadResponse{
    // API Versiyon
    string api = 1;

    // Olusturulacak Task 
    ToDo toDo = 2;
}

message UpdateRequest{
    // API Versiyon
    string api = 1;

    // Olusturulacak Task 
    ToDo toDo = 2;
}

message UpdateResponse{
    // API Versiyon
    string api = 1;

    // Güncellenen ToDO sayılarını içerir
    // Başarılı silme durumunda 1 sonucuna eşittir
    int64 updated = 2;
}

message DeleteRequest{
    // API Versiyon
    string api = 1;

    int64 id = 2;
}


message DeleteResponse{
    // API Versiyon
    string api = 1;

    // Silinen ToDoların sayısını içerir
    // Başarılı silme durumunda 1 sonucuna eşittir
    int64 deleted = 2;
}

message ReadAllRequest{
    // API Versiyon
    string api = 1;
}

message ReadAllResponse{
    // API Versiyon
    string api = 1;

    repeated ToDo toDos = 2;
}

// ToDo tasklerin servisi
service ToDoService {
    // Yeni todo task oluştur
    rpc Create(CreateRequest) returns (CreateResponse);

    rpc Read(ReadRequest) returns (ReadResponse);

    rpc Update(UpdateRequest) returns (UpdateResponse);

    rpc Delete(DeleteRequest) returns (DeleteResponse);

    rpc ReadAll(ReadAllRequest) returns (ReadAllResponse);
}
